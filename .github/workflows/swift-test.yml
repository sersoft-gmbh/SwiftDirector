name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        os: [ macos-12 ]
        swift-version: [ '' ]
        xcode-version: [ '^13.4' ]
        include:
          - os: macos-12
            swift-version: ''
            xcode-version: '^14.1'
          - os: ubuntu-20.04
            swift-version: 5.6
            xcode-version: ''
          - os: ubuntu-20.04
            swift-version: 5.7
            xcode-version: ''
          - os: ubuntu-22.04
            swift-version: 5.7
            xcode-version: ''

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install OpenLDAP
        if: ${{ runner.os == 'Linux' }}
        run: sudo apt-get install libldap2-dev
      - uses: maxim-lobanov/setup-xcode@v1.5.1
        if: ${{ runner.os == 'macOS' }}
        with:
          xcode-version: ${{ matrix.xcode-version }}
      - uses: swift-actions/setup-swift@v1.21.0
        if: ${{ runner.os == 'Linux' }}
        id: swift-setup-linux
        with:
          swift-version: ${{ matrix.swift-version }}
      # Workaround for https://github.com/swift-actions/setup-swift/issues/406
      - uses: sersoft-gmbh/swift-version-action@v2
        if: ${{ runner.os == 'macOS' }}
        id: swift-setup-macos
      - id: swift-setup
        env:
          RUNNER_OS: ${{ runner.os }}
          MACOS_SWIFT_VERSION: ${{ steps.swift-setup-macos.outputs.swift-version }}
          LINUX_SWIFT_VERSION: ${{ steps.swift-setup-linux.outputs.swift-version }}
        run: |
          if [ "${RUNNER_OS}" == 'macOS' ]; then
            echo "version=${MACOS_SWIFT_VERSION}" >> "${GITHUB_OUTPUT}"
          else
            echo "version=${LINUX_SWIFT_VERSION}" >> "${GITHUB_OUTPUT}"
          fi
      - name: Read OS Version
        uses: sersoft-gmbh/os-version-action@v2.0.1
        id: os-version
      - uses: actions/checkout@v3.2.0
      - uses: actions/cache@v3.2.2
        with:
          path: .build
          key: ${{ runner.os }}-${{ steps.os-version.outputs.version }}-spm-${{ steps.swift-version.outputs.version }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.os-version.outputs.version }}-spm-${{ steps.swift-version.outputs.version }}-
      - name: Build & Test
        run: swift test -v --parallel --enable-code-coverage
      - name: Generate Coverage Files
        uses: sersoft-gmbh/swift-coverage-action@v3.0.1
        id: coverage-files
      - uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ join(fromJSON(steps.coverage-files.outputs.files), ',') }}
          fail_ci_if_error: true

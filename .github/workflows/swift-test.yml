name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        os: [ macos-11, ubuntu-18.04, ubuntu-20.04 ]
        swift-version: [ 5.5, 5.6 ]

    runs-on: ${{matrix.os}}
    steps:
      - name: Install OpenLDAP
        if: runner.os == 'Linux'
        run: sudo apt-get install libldap2-dev
      - uses: maxim-lobanov/setup-xcode@v1.4.1
        if: runner.os == 'macOS'
        with:
          xcode-version: ^13.0
      - uses: swift-actions/setup-swift@v1.15.0
        if: runner.os == 'Linux'
        id: swift-setup-linux
        with:
          swift-version: ${{matrix.swift-version}}
      # Workaround for https://github.com/swift-actions/setup-swift/issues/406
      - uses: sersoft-gmbh/swift-version-action@v2
        if: runner.os == 'macOS'
        id: swift-setup-macos
      - id: swift-setup
        run: |
          if [ '${{runner.os}}' == 'macOS' ]; then
            echo "::set-output name=version::${{steps.swift-setup-macos.outputs.version}}"
          else
            echo "::set-output name=version::${{steps.swift-setup-linux.outputs.version}}"
          fi
      - name: Read OS Version
        uses: sersoft-gmbh/os-version-action@v2.0.0
        id: os-version
      - uses: actions/checkout@v3.0.2
      - uses: actions/cache@v3.0.8
        with:
          path: .build
          key: ${{runner.os}}-${{steps.os-version.outputs.version}}-${{github.repository}}-spm-${{steps.swift-setup.outputs.version}}-${{hashFiles('**/Package.resolved')}}
          restore-keys: |
            ${{runner.os}}-${{steps.os-version.outputs.version}}-${{github.repository}}-spm-${{steps.swift-setup.outputs.version}}-
      - name: Build & Test
        run: swift test -v --parallel --enable-code-coverage
      - name: Generate Coverage Files
        uses: sersoft-gmbh/swift-coverage-action@v3.0.0
        id: coverage-files
      - uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
          fail_ci_if_error: true
